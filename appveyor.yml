# @Author: Zackary BEAUGELIN <gysco>
# @Date:   2017-06-20T13:12:30+02:00
# @Email:  zackary.b@live.fr
# @Project: PyMENT-SSWD
# @Filename: appveyor.yml
# @Last modified by:   gysco
# @Last modified time: 2017-06-21T06:37:09+02:00



environment:
  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\appveyor\\run_with_env.cmd"
  matrix:
    - MINICONDA: "C:\\Miniconda35"
      PYTHON_VERSION: "3.5"
      PYTHON_ARCH: "32"

    - MINICONDA: "C:\\Miniconda35-x64"
      PYTHON_VERSION: "3.5"
      PYTHON_ARCH: "64"

install:
  # If there is a newer build queued for the same PR, cancel this one.
  # The AppVeyor 'rollout builds' option is supposed to serve the same
  # purpose but it is problematic because it tends to cancel builds pushed
  # directly to master instead of just PR builds (or the converse).
  # credits: JuliaLang developers.
  - ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER -and $env:APPVEYOR_BUILD_NUMBER -ne ((Invoke-RestMethod `
        https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG/history?recordsNumber=50).builds | `
        Where-Object pullRequestId -eq $env:APPVEYOR_PULL_REQUEST_NUMBER)[0].buildNumber) { `
          throw "There are newer queued builds for this pull request, failing early." }
  - ECHO "Filesystem root:"
  - ps: "ls \"C:/\""
  - ECHO "Installed SDKs:"
  - ps: "ls \"C:/Program Files/Microsoft SDKs/Windows\""
  - ps: if (-not(Test-Path($env:MINICONDA))) { & appveyor\install.ps1 }
  - "SET PATH=%MINICONDA%;%MINICONDA%\\Scripts;%PATH%"
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda info -a
  - "cd C:\\projects\\sswd"
  - "python -m pip install --upgrade pip"
  - conda install numpy
  - conda install scipy
  - "pip install -r requirements.txt"

build_script:
  - ps: "if ($env:PYTHON_ARCH -eq '32') {pyinstaller pyment-sswd_win.spec -n pyment-sswd_win32} else {pyinstaller pyment-sswd_win.spec -n pyment-sswd_win_amd64}"
  - ps: "ls ."
  # - ps: coverage run pyment/__main__.py
  # - ps: codecov

deploy:
  release: pyment-sswd-$(appveyor_repo_tag_name)
  description: 'Release description'
  provider: GitHub
  auth_token:
    secure: vNHBbIHk3IgAYPioz1zmSCNBDmsb81hu35CXWcwQts2PPvP1lRiqY2m/E1KC2HSs
  artifact: ./dist/*.exe
  draft: false
  prerelease: false
  on:
    branch: master
    appveyor_repo_tag: true

# artifacts:
#   - path: "./dist/pyment-sswd_win32.exe"
#     name: "pyment-sswd_win32.exe"
#   - path: "./dist/pyment-sswd_win_amd64.exe"
#     name: "pyment-sswd_win_amd64.exe"

cache:
  - "c:\\tmp\\pip-cache"
